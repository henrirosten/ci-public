pipeline {                                                                                              
    // Please rename to suitable Jenkins executor node
    //agent {label 'NotInUse'}                                                                          
    agent {label 'tc-agent02'}                                                                          
    stages {                                                                                            
        stage('clone') {                                                                                
            steps {                                                                                     
                catchError {                                                                            
                    sh 'git clone https://github.com/tiiuae/spectrum-jenkins.git'                       
                }                                                                                       
            }                                                                                           
        }                                                                                               
        stage('debug') {                                                                                
            steps {                                                                                     
                sh 'rm -rf hydra.*'                                                                     
                sh 'rm -rf list.txt'                                                                    
                sh 'rm -rf wlist.txt'                                                                   
            }                                                                                           
        }                                                                                               
      /*  stage('verifyStore') {                                                                        
            steps {                                                                                     
                build job: 'NixStoreChecker'                                                            
            }                                                                                           
        }*/                                                                                             
        stage('hydrascrape') {                                                                          
            steps {                                                                                     
                sh 'echo abc'                                                                           
                sh 'python3  spectrum-jenkins/hydrascrape/hydrascrape.py hydra.vedenemo.dev nuctest combined \'echo $HYDRA_BUILD_ID:$HYDRA_OUTPUT_STORE_PATHS >> list.txt\''                                                   
            }                                                                                           
        }                                                                                               
        stage('copy') {                                                                                 
            steps {                                                                                     
                script {                                                                                
                    def storepaths = readFile(file: 'list.txt')                                         
                    storepaths.split('\n').each { String line ->                                        
                        println("hash: ${line}")      
                        def data = line.split(':')
                        println("BuildID: ${data[0]} File: ${data[1]}")
                        try {                                                                           
                            build job: 'NixCopyTest', parameters: [[$class: 'StringParameterValue', name: 'image', value: " ${data[1]}"], [$class: 'StringParameterValue', name: 'buildID', value: " ${data[0]}"]]
                            sh "echo ${line} >> wlist.txt"
                            sh "echo ${line}"
                            sh "cp ${data[1]} ../images/"
                            sh 'ls ../images/'
                        } catch (err) {                                                                 
                            println("Hash: ${line} failed: ${err}")                                     
                        }                                                                               
                    }                                                                                   
                }                                                                                       
            }                                                                                           
        }                                                                                               
        stage('vulnix') {                                                                               
            steps {                                                                                     
                script {                                                                                
                    def storepaths = readFile(file: 'wlist.txt')                                         
                    storepaths.split('\n').each{ String line ->                                         
                    println ("Vulnix for hash: ${line}")
                    def data = line.split(':')
                    println("BuildID: ${data[0]} File: ${data[1]}")
                    catchError {                                                                        
                        build job: 'vulnix', parameters: [[$class: 'StringParameterValue', name: 'image', value: " ${data[1]}"], [$class: 'StringParameterValue', name: 'buildID', value: " ${data[0]}"]]                                              
                    }                                                                                   
                    }                                                                                   
                }                                                                                       
            }                                                                                           
        }                                                                             
    }                                                                                                   
}